name: Release sakura CLI
on:
  push:
    branches-ignore:
      - '**'

    tags:
      - 'sakura-cli-v*'
jobs:
  build-sakura-cli:
    strategy:
      matrix:
        target: [armv7-unknown-linux-gnueabihf, x86_64-unknown-linux-gnu, x86_64-apple-darwin, aarch64-apple-darwin]
        include:
          - target: armv7-unknown-linux-gnueabihf
            os: ubuntu-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Get the tag
        id: tag
        run: echo ::set-output name=name::${GITHUB_REF/refs\/tags\//}

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          target: ${{ matrix.target }}
          override: true

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            sakura/target/
          key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Build Cargo
        working-directory: sakura
        run: |
          cargo build --verbose --target ${{ matrix.target }} --release

      - name: Zip Artifact
        working-directory: sakura
        run: zip -r ${{ steps.tag.outputs.name }}-${{ matrix.target }}.zip target/release/sakura

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.tag.outputs.name }}-${{ matrix.target }}
          path: sakura/${{ steps.tag.outputs.name }}-${{ matrix.target }}.zip

  draft-release-sakura-cli:
    needs: [build-sakura-cli]
    runs-on: ubuntu-latest
    steps:
      - name: Get the tag
        id: tag
        run: echo ::set-output name=name::${GITHUB_REF/refs\/tags\//}

      - name: Create a draft release
        id: draft-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        with:
          tag_name: ${{ steps.tag.outputs.name }}
          release_name: ${{ steps.tag.outputs.name }}
          body: |
            ## Changelog
          draft: true
          prerelease: false

      - name: Save upload url of this draft release.
        run: |
          echo '${{ steps.draft-release.outputs.upload_url }}' > release_upload_url.txt
          - name: Upload `release_upload_url.txt`
            uses: actions/upload-artifact@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              name: draft-release
              path: release_upload_url.txt
  upload-artifacts:
    strategy:
      matrix:
        target: [armv7-unknown-linux-gnueabihf, x86_64-unknown-linux-gnu, x86_64-apple-darwin, aarch64-apple-darwin]
    needs: [ build-sakura-cli, draft-release-sakura-cli ]
    runs-on: ubuntu-latest
    steps:
      - name: Get the tag
        id: tag
        run: echo ::set-output name=name::${GITHUB_REF/refs\/tags\//}
      - uses: actions/download-artifact@v1
        with:
          name: draft-release
      - name: Set upload url
        id: upload-url
        run: |
          echo "::set-output name=url::$(cat draft-release/release_upload_url.txt)"

      - uses: actions/download-artifact@v1
        with:
          name: ${{ steps.tag.outputs.name }}-${{ matrix.target }}
          path: artifacts/

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.upload-url.outputs.url }}
          asset_path: ./artifacts/${{ steps.tag.outputs.name }}-${{ matrix.target }}.zip
          asset_name: ${{ steps.tag.outputs.name }}-${{ matrix.target }}.zip
          asset_content_type: application/zip
